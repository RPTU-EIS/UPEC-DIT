function automatic State_Equivalence();
State_Equivalence = (
  (P1.controller_i.fence_active_q == P2.controller_i.fence_active_q) &&
  (P1.controller_i.flush_dcache_o == P2.controller_i.flush_dcache_o) &&
  (P1.csr_regfile_i.cycle_q == P2.csr_regfile_i.cycle_q) &&
  (P1.csr_regfile_i.dcache_q == P2.csr_regfile_i.dcache_q) &&
  (P1.csr_regfile_i.dcsr_q == P2.csr_regfile_i.dcsr_q) &&
  (P1.csr_regfile_i.debug_mode_q == P2.csr_regfile_i.debug_mode_q) &&
  (P1.csr_regfile_i.dpc_q == P2.csr_regfile_i.dpc_q) &&
  (P1.csr_regfile_i.dscratch0_q == P2.csr_regfile_i.dscratch0_q) &&
  (P1.csr_regfile_i.dscratch1_q == P2.csr_regfile_i.dscratch1_q) &&
  (P1.csr_regfile_i.en_ld_st_translation_q == P2.csr_regfile_i.en_ld_st_translation_q) &&
  (P1.csr_regfile_i.fcsr_q == P2.csr_regfile_i.fcsr_q) &&
  (P1.csr_regfile_i.icache_q == P2.csr_regfile_i.icache_q) &&
  (P1.csr_regfile_i.instret_q == P2.csr_regfile_i.instret_q) &&
  (P1.csr_regfile_i.mcause_q == P2.csr_regfile_i.mcause_q) &&
  (P1.csr_regfile_i.mcounteren_q == P2.csr_regfile_i.mcounteren_q) &&
  (P1.csr_regfile_i.medeleg_q == P2.csr_regfile_i.medeleg_q) &&
  (P1.csr_regfile_i.mepc_q == P2.csr_regfile_i.mepc_q) &&
  (P1.csr_regfile_i.mideleg_q == P2.csr_regfile_i.mideleg_q) &&
  (P1.csr_regfile_i.mie_q == P2.csr_regfile_i.mie_q) &&
  (P1.csr_regfile_i.mip_q == P2.csr_regfile_i.mip_q) &&
  (P1.csr_regfile_i.mscratch_q == P2.csr_regfile_i.mscratch_q) &&
  (P1.csr_regfile_i.mstatus_q == P2.csr_regfile_i.mstatus_q) &&
  (P1.csr_regfile_i.mtval_q == P2.csr_regfile_i.mtval_q) &&
  (P1.csr_regfile_i.mtvec_q == P2.csr_regfile_i.mtvec_q) &&
  (P1.csr_regfile_i.mtvec_rst_load_q == P2.csr_regfile_i.mtvec_rst_load_q) &&
  (P1.csr_regfile_i.pmpaddr_q == P2.csr_regfile_i.pmpaddr_q) &&
  (P1.csr_regfile_i.pmpcfg_q == P2.csr_regfile_i.pmpcfg_q) &&
  (P1.csr_regfile_i.priv_lvl_q == P2.csr_regfile_i.priv_lvl_q) &&
  (P1.csr_regfile_i.satp_q == P2.csr_regfile_i.satp_q) &&
  (P1.csr_regfile_i.scause_q == P2.csr_regfile_i.scause_q) &&
  (P1.csr_regfile_i.scounteren_q == P2.csr_regfile_i.scounteren_q) &&
  (P1.csr_regfile_i.sepc_q == P2.csr_regfile_i.sepc_q) &&
  (P1.csr_regfile_i.sscratch_q == P2.csr_regfile_i.sscratch_q) &&
  (P1.csr_regfile_i.stval_q == P2.csr_regfile_i.stval_q) &&
  (P1.csr_regfile_i.stvec_q == P2.csr_regfile_i.stvec_q) &&
  (P1.csr_regfile_i.wfi_q == P2.csr_regfile_i.wfi_q) &&
  (P1.ex_stage_i.asid_to_be_flushed == P2.ex_stage_i.asid_to_be_flushed) &&
  (P1.ex_stage_i.current_instruction_is_sfence_vma == P2.ex_stage_i.current_instruction_is_sfence_vma) &&
  (P1.ex_stage_i.i_mult.i_div.cnt_q == P2.ex_stage_i.i_mult.i_div.cnt_q) &&
  (P1.ex_stage_i.i_mult.i_div.comp_inv_q == P2.ex_stage_i.i_mult.i_div.comp_inv_q) &&
  (P1.ex_stage_i.i_mult.i_div.div_res_zero_q == P2.ex_stage_i.i_mult.i_div.div_res_zero_q) &&
  (P1.ex_stage_i.i_mult.i_div.id_q == P2.ex_stage_i.i_mult.i_div.id_q) &&
  (P1.ex_stage_i.i_mult.i_div.op_a_q == P2.ex_stage_i.i_mult.i_div.op_a_q) &&
  (P1.ex_stage_i.i_mult.i_div.op_b_q == P2.ex_stage_i.i_mult.i_div.op_b_q) &&
  (P1.ex_stage_i.i_mult.i_div.op_b_zero_q == P2.ex_stage_i.i_mult.i_div.op_b_zero_q) &&
  (P1.ex_stage_i.i_mult.i_div.rem_sel_q == P2.ex_stage_i.i_mult.i_div.rem_sel_q) &&
  (P1.ex_stage_i.i_mult.i_div.res_inv_q == P2.ex_stage_i.i_mult.i_div.res_inv_q) &&
  (P1.ex_stage_i.i_mult.i_div.res_q == P2.ex_stage_i.i_mult.i_div.res_q) &&
  (P1.ex_stage_i.i_mult.i_div.state_q == P2.ex_stage_i.i_mult.i_div.state_q) &&
  (P1.ex_stage_i.i_mult.i_multiplier.mult_result_q == P2.ex_stage_i.i_mult.i_multiplier.mult_result_q) &&
  (P1.ex_stage_i.i_mult.i_multiplier.mult_valid_q == P2.ex_stage_i.i_mult.i_multiplier.mult_valid_q) &&
  (P1.ex_stage_i.i_mult.i_multiplier.operator_q == P2.ex_stage_i.i_mult.i_multiplier.operator_q) &&
  (P1.ex_stage_i.i_mult.i_multiplier.trans_id_q == P2.ex_stage_i.i_mult.i_multiplier.trans_id_q) &&
  (P1.ex_stage_i.i_mult.word_op_q == P2.ex_stage_i.i_mult.word_op_q) &&
  (P1.ex_stage_i.vaddr_to_be_flushed == P2.ex_stage_i.vaddr_to_be_flushed) &&
  (P1.i_frontend.bht_q == P2.i_frontend.bht_q) &&
  (P1.i_frontend.btb_q == P2.i_frontend.btb_q) &&
  (P1.i_frontend.i_bht.bht_q == P2.i_frontend.i_bht.bht_q) &&
  (P1.i_frontend.i_btb.btb_q == P2.i_frontend.i_btb.btb_q) &&
  (P1.i_frontend.i_instr_queue.gen_instr_fifo[0].i_fifo_instr_data.mem_q == P2.i_frontend.i_instr_queue.gen_instr_fifo[0].i_fifo_instr_data.mem_q) &&
  (P1.i_frontend.i_instr_queue.gen_instr_fifo[0].i_fifo_instr_data.read_pointer_q == P2.i_frontend.i_instr_queue.gen_instr_fifo[0].i_fifo_instr_data.read_pointer_q) &&
  (P1.i_frontend.i_instr_queue.gen_instr_fifo[0].i_fifo_instr_data.status_cnt_q == P2.i_frontend.i_instr_queue.gen_instr_fifo[0].i_fifo_instr_data.status_cnt_q) &&
  (P1.i_frontend.i_instr_queue.gen_instr_fifo[0].i_fifo_instr_data.write_pointer_q == P2.i_frontend.i_instr_queue.gen_instr_fifo[0].i_fifo_instr_data.write_pointer_q) &&
  (P1.i_frontend.i_instr_queue.gen_instr_fifo[1].i_fifo_instr_data.mem_q == P2.i_frontend.i_instr_queue.gen_instr_fifo[1].i_fifo_instr_data.mem_q) &&
  (P1.i_frontend.i_instr_queue.gen_instr_fifo[1].i_fifo_instr_data.read_pointer_q == P2.i_frontend.i_instr_queue.gen_instr_fifo[1].i_fifo_instr_data.read_pointer_q) &&
  (P1.i_frontend.i_instr_queue.gen_instr_fifo[1].i_fifo_instr_data.status_cnt_q == P2.i_frontend.i_instr_queue.gen_instr_fifo[1].i_fifo_instr_data.status_cnt_q) &&
  (P1.i_frontend.i_instr_queue.gen_instr_fifo[1].i_fifo_instr_data.write_pointer_q == P2.i_frontend.i_instr_queue.gen_instr_fifo[1].i_fifo_instr_data.write_pointer_q) &&
  (P1.i_frontend.i_instr_queue.i_fifo_address.mem_q == P2.i_frontend.i_instr_queue.i_fifo_address.mem_q) &&
  (P1.i_frontend.i_instr_queue.i_fifo_address.read_pointer_q == P2.i_frontend.i_instr_queue.i_fifo_address.read_pointer_q) &&
  (P1.i_frontend.i_instr_queue.i_fifo_address.status_cnt_q == P2.i_frontend.i_instr_queue.i_fifo_address.status_cnt_q) &&
  (P1.i_frontend.i_instr_queue.i_fifo_address.write_pointer_q == P2.i_frontend.i_instr_queue.i_fifo_address.write_pointer_q) &&
  (P1.i_frontend.i_instr_queue.idx_ds_q == P2.i_frontend.i_instr_queue.idx_ds_q) &&
  (P1.i_frontend.i_instr_queue.idx_is_q == P2.i_frontend.i_instr_queue.idx_is_q) &&
  (P1.i_frontend.i_instr_queue.pc_q == P2.i_frontend.i_instr_queue.pc_q) &&
  (P1.i_frontend.i_instr_queue.reset_address_q == P2.i_frontend.i_instr_queue.reset_address_q) &&
  (P1.i_frontend.i_instr_realign.unaligned_address_q == P2.i_frontend.i_instr_realign.unaligned_address_q) &&
  (P1.i_frontend.i_instr_realign.unaligned_instr_q == P2.i_frontend.i_instr_realign.unaligned_instr_q) &&
  (P1.i_frontend.i_instr_realign.unaligned_q == P2.i_frontend.i_instr_realign.unaligned_q) &&
  (P1.i_frontend.i_ras.stack_q == P2.i_frontend.i_ras.stack_q) &&
  (P1.i_frontend.icache_data_q == P2.i_frontend.icache_data_q) &&
  (P1.i_frontend.icache_ex_valid_q == P2.i_frontend.icache_ex_valid_q) &&
  (P1.i_frontend.icache_vaddr_q == P2.i_frontend.icache_vaddr_q) &&
  (P1.i_frontend.icache_valid_q == P2.i_frontend.icache_valid_q) &&
  (P1.i_frontend.npc_q == P2.i_frontend.npc_q) &&
  (P1.i_frontend.npc_rst_load_q == P2.i_frontend.npc_rst_load_q) &&
  (P1.i_frontend.speculative_q == P2.i_frontend.speculative_q) &&
  (P1.i_perf_counters.perf_counter_q == P2.i_perf_counters.perf_counter_q) &&
  (P1.id_stage_i.issue_q == P2.id_stage_i.issue_q) &&
  (P1.issue_stage_i.i_issue_read_operands.alu_valid_q == P2.issue_stage_i.i_issue_read_operands.alu_valid_q) &&
  (P1.issue_stage_i.i_issue_read_operands.branch_predict_o == P2.issue_stage_i.i_issue_read_operands.branch_predict_o) &&
  (P1.issue_stage_i.i_issue_read_operands.branch_valid_q == P2.issue_stage_i.i_issue_read_operands.branch_valid_q) &&
  (P1.issue_stage_i.i_issue_read_operands.csr_valid_q == P2.issue_stage_i.i_issue_read_operands.csr_valid_q) &&
//  (P1.issue_stage_i.i_issue_read_operands.float_regfile_gen.i_ariane_fp_regfile.mem == P2.issue_stage_i.i_issue_read_operands.float_regfile_gen.i_ariane_fp_regfile.mem) &&
  (P1.issue_stage_i.i_issue_read_operands.fpu_fmt_q == P2.issue_stage_i.i_issue_read_operands.fpu_fmt_q) &&
  (P1.issue_stage_i.i_issue_read_operands.fpu_rm_q == P2.issue_stage_i.i_issue_read_operands.fpu_rm_q) &&
  (P1.issue_stage_i.i_issue_read_operands.fpu_valid_q == P2.issue_stage_i.i_issue_read_operands.fpu_valid_q) &&
  (P1.issue_stage_i.i_issue_read_operands.fu_q == P2.issue_stage_i.i_issue_read_operands.fu_q) &&
  (P1.issue_stage_i.i_issue_read_operands.imm_q == P2.issue_stage_i.i_issue_read_operands.imm_q) &&
  (P1.issue_stage_i.i_issue_read_operands.is_compressed_instr_o == P2.issue_stage_i.i_issue_read_operands.is_compressed_instr_o) &&
  (P1.issue_stage_i.i_issue_read_operands.lsu_valid_q == P2.issue_stage_i.i_issue_read_operands.lsu_valid_q) &&
  (P1.issue_stage_i.i_issue_read_operands.mult_valid_q == P2.issue_stage_i.i_issue_read_operands.mult_valid_q) &&
  (P1.issue_stage_i.i_issue_read_operands.operand_a_q == P2.issue_stage_i.i_issue_read_operands.operand_a_q) &&
  (P1.issue_stage_i.i_issue_read_operands.operand_b_q == P2.issue_stage_i.i_issue_read_operands.operand_b_q) &&
  (P1.issue_stage_i.i_issue_read_operands.operator_q == P2.issue_stage_i.i_issue_read_operands.operator_q) &&
  (P1.issue_stage_i.i_issue_read_operands.pc_o == P2.issue_stage_i.i_issue_read_operands.pc_o) &&
  (P1.issue_stage_i.i_issue_read_operands.trans_id_q == P2.issue_stage_i.i_issue_read_operands.trans_id_q) &&
  (P1.issue_stage_i.i_re_name.re_name_table_fpr_q == P2.issue_stage_i.i_re_name.re_name_table_fpr_q) &&
  (P1.issue_stage_i.i_re_name.re_name_table_gpr_q == P2.issue_stage_i.i_re_name.re_name_table_gpr_q) &&
  (P1.issue_stage_i.i_scoreboard.commit_pointer_q == P2.issue_stage_i.i_scoreboard.commit_pointer_q) &&
  (P1.issue_stage_i.i_scoreboard.issue_cnt_q == P2.issue_stage_i.i_scoreboard.issue_cnt_q) &&
  (P1.issue_stage_i.i_scoreboard.issue_pointer_q == P2.issue_stage_i.i_scoreboard.issue_pointer_q) &&
  (P1.issue_stage_i.i_scoreboard.mem_q == P2.issue_stage_i.i_scoreboard.mem_q)
);
endfunction
